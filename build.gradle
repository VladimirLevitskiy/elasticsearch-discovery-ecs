/*
 *   Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License").
 *   You may not use this file except in compliance with the License.
 *   A copy of the License is located at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   or in the "license" file accompanying this file. This file is distributed
 *   on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 *   express or implied. See the License for the specific language governing
 *   permissions and limitations under the License.
 */

buildscript {

    ext {
        es_version = System.getProperty("es.version", "7.15.2")
    }

    // This isn't applying from repositories.gradle so repeating it here
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:${es_version}"
    }

}

plugins {
    id 'nebula.ospackage' version '9.0.0'
    id 'java-library'
}

// Repository on root level is for dependencies that project code depends on. And this block must be placed after plugins{}
repositories {
    mavenCentral() // For Elastic Libs that you can use to get started coding until open ES libs are available
}

ext {
    projectSubstitutions = [:]

    pluginVersion = es_version
    isSnapshot = "true" == System.getProperty("build.snapshot", "true")

    licenseFile = rootProject.file('LICENSE.TXT')
    noticeFile = rootProject.file('NOTICE')
}

// common maven publishing configuration
allprojects {
    group = 'com.github.timonwong'
    version = "${pluginVersion}.0"
    description = 'Aliyun ECS discovery plugin for Elasticsearch'

    plugins.withId('java') {
        sourceCompatibility = targetCompatibility = "1.8"
    }
}

apply plugin: 'elasticsearch.esplugin'
apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.3'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

esplugin {
    name 'elasticsearch-discovery-ecs' // zip file name and plugin name in ${elasticsearch.plugin.name} read by ES when plugin loading
    description "${project.description}"
    classname 'com.github.timonwong.elasticsearch.discovery.ecs.EcsDiscoveryPlugin'
    licenseFile rootProject.file("LICENSE.txt")
    noticeFile rootProject.file("NOTICE")
}


check.dependsOn jacocoTestReport

dependencies {
    implementation "com.google.code.gson:gson:2.8.7"
    implementation "org.slf4j:slf4j-api:1.7.30"
    implementation(group: 'com.aliyun', name: 'aliyun-java-sdk-core', version: '4.5.30')
    implementation(group: 'com.aliyun', name: 'aliyun-java-sdk-ecs', version: '4.24.11')
    implementation ("org.apache.httpcomponents:httpclient:4.5.10")
    implementation ("org.apache.httpcomponents:httpcore:4.4.12")
    implementation ("commons-io:commons-io:2.6")
    implementation ("org.ini4j:ini4j:0.5.4")
    implementation ("javax.xml.bind:jaxb-api:2.3.1")
}

apply plugin: 'nebula.ospackage'

// This is afterEvaluate because the bundlePlugin ZIP task is updated afterEvaluate and changes the ZIP name to match the plugin name
afterEvaluate {
    ospackage {
        packageName = "${project.name}"
        release = isSnapshot ? '0.1' : '1'
        version = "${project.version}" - "-SNAPSHOT"

        into '/usr/share/elasticsearch/plugins'
        from(zipTree(bundlePlugin.archiveFile)) {
            into esplugin.name
        }

        user 'root'
        permissionGroup 'root'
        fileMode 0644
        dirMode 0755

        requires('elasticsearch-oss', es_version, EQUAL)
        packager = 'Timon Wong'
        // vendor = 'XXX'
        os = 'LINUX'
        prefix '/usr'

        license 'ASL-2.0'
        maintainer 'Timon Wong'
        url 'https://github.com/timonwong/elasticsearch-discovery-ecs'
        summary "${project.description}"
    }

    buildRpm {
        arch = 'NOARCH'
        archiveName "${packageName}-${version}.rpm"
        dependsOn 'assemble'
    }

    buildDeb {
        arch = 'amd64'
        archiveName "${packageName}-${version}.deb"
        dependsOn 'assemble'
    }

    task buildPackages(type: GradleBuild) {
        tasks = ['build', 'buildRpm', 'buildDeb']
    }
}
